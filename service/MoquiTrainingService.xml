<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-3.0.xsd">

    <service verb="create"
             noun="MoquiTraining">
        <in-parameters>
            <auto-parameters entity-name="MoquiTraining" include="nonpk"/>
            <parameter name="trainingId" required="true"/>
            <parameter name="trainingName"  required="true"/>
            <parameter name="trainingDate"  required="true"/>
            <parameter name="trainingPrice" />
            <parameter name="trainingDuration"/>

        </in-parameters>
        <out-parameters>
            <parameter name="trainingId" />
        </out-parameters>

        <actions>
            <script>
<!--                import static org.moqui.util.ObjectUtilities.*-->
<!--                import static org.moqui.util.CollectionUtilities.*-->
<!--                import static org.moqui.util.StringUtilities.*-->
<!--                import java.sql.Timestamp-->
<!--                import java.sql.Time-->
<!--                import java.time.*-->

                if (true) {
                ec.service.sync().name("create#MoquiTraining")
                .parameters(context).call()

                if (ec.message.hasError()) return
                }
                // make sure the last statement is not considered the return value
                return;
            </script>

<!--            <service-call name="create#MoquiTraining" in-map="context"/>-->
        </actions>

    </service>



<!--    find-->

    <service verb="find"
             noun="TrainingData">
    <in-parameters>
        <parameter name="trainingId" />


    </in-parameters>
    <out-parameters>
        <parameter name="trainingInfo" type="list" />
    </out-parameters>
        <actions>
            <entity-find entity-name="MoquiTraining" list="trainingInfo">
                <econdition field-name="trainingName"/>
                <select-field field-name="trainingName , trainingId,trainingDate"/>
            </entity-find>
        </actions>
    </service>







<!--create/update-->


    <service verb="store" noun="MoquiTrainingUpdate">
        <in-parameters>

            <auto-parameters entity-name="MoquiTraining" include="nonpk"/>
            <parameter name="trainingName" required="true"/>
            <parameter name="trainingDate"  type ="Timestamp" format="MM/dd"/>

        </in-parameters>
        <out-parameters>
            <parameter name="trainingId"/>
        </out-parameters>
        <actions>
            <!-- Check if the record exists -->
            <entity-find entity-name="MoquiTraining" list="tutorialList">
                <econdition field-name="trainingName" ignore-case="true"/>
            </entity-find>

            <if condition="tutorialList">
      <!--   Record already exists , update with new values             -->
            <then>
                <set field="tutorial" from="tutorialList.first"/>
                <entity-set value-field="tutorial" map="context"/>
                <entity-update value-field="tutorial"/>
                <set field="trainingId" from="tutorial.trainingId"/>
            </then>
       <!--      create new record          -->
                <else>
                    <service-call name="create#MoquiTraining" in-map="context" out-map="context"/>
                </else>
            </if>
        </actions>
    </service>





</services>

